/**
 * sora-js-sdk
 * WebRTC SFU Sora JavaScript SDK
 * @version: 1.16.0-dev
 * @author: Shiguredo Inc.
 * @license: Apache-2.0
 **/(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define(b):(a=a||self,a.Sora=b())})(this,function(){'use strict';function a(){const a=window.navigator.userAgent.toLocaleLowerCase();if(-1!==a.indexOf("edge"))return"edge";return-1!==a.indexOf("chrome")&&-1===a.indexOf("edge")?"chrome":-1!==a.indexOf("safari")&&-1===a.indexOf("chrome")?"safari":-1===a.indexOf("opera")?-1===a.indexOf("firefox")?null:"firefox":"opera"}function b(b,c){if("boolean"!=typeof c&&"VP9"===c.codec_type)return!1;if(("upstream"===b||"sendrecv"===b||"sendonly"===b)&&"firefox"===a())return!1;if(("upstream"===b||"sendrecv"===b||"sendonly"===b)&&"safari"===a())return!1;if(("downstream"===b||"recvonly"===b)&&"safari"===a()){const a=window.navigator.appVersion.toLowerCase(),b=/version\/([\d.]+)/.exec(a);if(!b)return!1;const d=b.pop();return!!(d&&12<parseFloat(d))||!!(d&&12==parseFloat(d)&&"boolean"!=typeof c&&"H264"===c.codec_type)}return!0}function c(){return"edge"===a()}function d(){return"safari"===a()}function e(a,c,d,e,f){if("upstream"!==c&&"downstream"!==c&&"sendrecv"!==c&&"sendonly"!==c&&"recvonly"!==c)throw new Error("Unknown role type");if(null===d||void 0===d)throw new Error("channelId can not be null or undefined");const g={type:"connect",sora_client:`Sora JavaScript SDK ${"1.16.0-dev"}`,environment:window.navigator.userAgent,role:c,channel_id:d,sdp:a,audio:!0,video:!0};if(e&&(g.metadata=e),"multistream"in f&&!0===f.multistream&&(g.multistream=!0,"spotlight"in f&&(g.spotlight=f.spotlight)),"simulcast"in f||"simulcastQuality"in f){"simulcast"in f&&!0===f.simulcast&&(g.simulcast=!0);void 0!==f.simulcastQuality&&0<=["low","middle","high"].indexOf(f.simulcastQuality)&&(g.simulcast={quality:f.simulcastQuality})}"clientId"in f&&f.clientId&&(g.client_id=f.clientId);const h=["audioCodecType","audioBitRate"],i=["audioOpusParamsChannels","audioOpusParamsClockRate","audioOpusParamsMaxplaybackrate","audioOpusParamsStereo","audioOpusParamsSpropStereo","audioOpusParamsMinptime","audioOpusParamsPtime","audioOpusParamsUseinbandfec","audioOpusParamsUsedtx"],j=["videoCodecType","videoBitRate"],k=Object.assign({},f);Object.keys(k).forEach(a=>{"audio"===a&&"boolean"==typeof k[a]||"video"===a&&"boolean"==typeof k[a]||0<=h.indexOf(a)&&null!==k[a]||0<=i.indexOf(a)&&null!==k[a]||0<=j.indexOf(a)&&null!==k[a]||delete k[a]}),void 0!==k.audio&&(g.audio=k.audio);const l=Object.keys(k).some(a=>0<=h.indexOf(a));g.audio&&l&&(g.audio={},"audioCodecType"in k&&(g.audio.codec_type=k.audioCodecType),"audioBitRate"in k&&(g.audio.bit_rate=k.audioBitRate));const m=Object.keys(k).some(a=>0<=i.indexOf(a));g.audio&&m&&("object"!=typeof g.audio&&(g.audio={}),g.audio.opus_params={},"audioOpusParamsChannels"in k&&(g.audio.opus_params.channels=k.audioOpusParamsChannels),"audioOpusParamsClockRate"in k&&(g.audio.opus_params.clock_rate=k.audioOpusParamsClockRate),"audioOpusParamsMaxplaybackrate"in k&&(g.audio.opus_params.maxplaybackrate=k.audioOpusParamsMaxplaybackrate),"audioOpusParamsStereo"in k&&(g.audio.opus_params.stereo=k.audioOpusParamsStereo),"audioOpusParamsSpropStereo"in k&&(g.audio.opus_params.sprop_stereo=k.audioOpusParamsSpropStereo),"audioOpusParamsMinptime"in k&&(g.audio.opus_params.minptime=k.audioOpusParamsMinptime),"audioOpusParamsPtime"in k&&(g.audio.opus_params.ptime=k.audioOpusParamsPtime),"audioOpusParamsUseinbandfec"in k&&(g.audio.opus_params.useinbandfec=k.audioOpusParamsUseinbandfec),"audioOpusParamsUsedtx"in k&&(g.audio.opus_params.usedtx=k.audioOpusParamsUsedtx)),void 0!==k.video&&(g.video=k.video);const n=Object.keys(k).some(a=>0<=j.indexOf(a));if(g.video&&n&&(g.video={},"videoCodecType"in k&&(g.video.codec_type=k.videoCodecType),"videoBitRate"in k&&(g.video.bit_rate=k.videoBitRate)),g.simulcast&&!b(g.role,g.video))throw new Error("Simulcast can not be used with this browser");return g}function f(a,b,d){let e="";window.performance&&(e="["+(window.performance.now()/1e3).toFixed(3)+"]"),a&&(e=e+"["+a+"]"),c()?console.log(e+" "+b+"\n",d):console.info(e+" "+b+"\n",d)}class g{constructor(a,b,c,d,e,f){this.role=b,this.channelId=c,this.metadata=d,this.signalingUrl=a,this.options=e,this.constraints=null,this.debug=f,this.clientId=null,this.connectionId=null,this.remoteConnectionIds=[],this.stream=null,this._ws=null,this._pc=null,this._callbacks={disconnect:()=>{},push:()=>{},addstream:()=>{},removestream:()=>{},notify:()=>{},log:()=>{},timeout:()=>{}},this.authMetadata=null}on(a,b){a in this._callbacks&&(this._callbacks[a]=b)}disconnect(){this.clientId=null,this.connectionId=null,this.authMetadata=null,this.remoteConnectionIds=[];const a=new Promise(a=>this.stream?(this.stream.getTracks().forEach(a=>{a.stop()}),this.stream=null,a()):a()),b=new Promise((a,b)=>{if(!this._ws)return a();this._ws.onclose=null;let c=5;const d=setInterval(()=>this._ws?3===this._ws.readyState?(this._ws=null,clearInterval(d),a()):(--c,0>c)?(clearInterval(d),b("WebSocket Closing Error")):void 0:(clearInterval(d),b("WebSocket Closing Error")),1e3);this._ws.close()}),c=new Promise((a,b)=>{if(d()&&this._pc)return this._pc.oniceconnectionstatechange=null,this._pc.close(),this._pc=null,a();if(!this._pc||"closed"===this._pc.signalingState)return a();let c=5;const e=setInterval(()=>this._pc?"closed"===this._pc.signalingState?(clearInterval(e),this._pc.oniceconnectionstatechange=null,this._pc=null,a()):(--c,0>c)?(clearInterval(e),b("PeerConnection Closing Error")):void 0:(clearInterval(e),b("PeerConnection Closing Error")),1e3);this._pc.close()});return Promise.all([a,b,c])}_signaling(a){return this._trace("CREATE OFFER SDP",a),new Promise((b,c)=>{const d=e(a.sdp||"",this.role,this.channelId,this.metadata,this.options);null===this._ws&&(this._ws=new WebSocket(this.signalingUrl)),this._ws.onclose=a=>{c(a)},this._ws.onopen=()=>{this._trace("SIGNALING CONNECT MESSAGE",d),this._ws&&this._ws.send(JSON.stringify(d))},this._ws.onmessage=a=>{const c=JSON.parse(a.data);"offer"==c.type?(this.clientId=c.client_id,this.connectionId=c.connection_id,this._ws&&(this._ws.onclose=a=>{this.disconnect().then(()=>{this._callbacks.disconnect(a)})},this._ws.onerror=null),"metadata"in c&&(this.authMetadata=c.metadata),this._trace("SIGNALING OFFER MESSAGE",c),this._trace("OFFER SDP",c.sdp),b(c)):"update"==c.type?(this._trace("UPDATE SDP",c.sdp),this._update(c)):"ping"==c.type?c.stats?this._getStats().then(a=>{this._ws&&this._ws.send(JSON.stringify({type:"pong",stats:a}))}):this._ws&&this._ws.send(JSON.stringify({type:"pong"})):"push"==c.type?this._callbacks.push(c):"notify"==c.type&&this._callbacks.notify(c)}})}async _createOffer(){const a=new window.RTCPeerConnection({iceServers:[]});if(d()){a.addTransceiver("video",{direction:"recvonly"}),a.addTransceiver("audio",{direction:"recvonly"});const b=await a.createOffer();return a.close(),b}const b=await a.createOffer({offerToReceiveAudio:!0,offerToReceiveVideo:!0});return a.close(),b}async _connectPeerConnection(a){const b=a.config||{};let c=b;if(void 0!==window.RTCPeerConnection.generateCertificate){const a=await window.RTCPeerConnection.generateCertificate({name:"ECDSA",namedCurve:"P-256"});c=Object.assign({certificates:[a]},b)}return this._trace("PEER CONNECTION CONFIG",c),this._pc=new window.RTCPeerConnection(c,this.constraints),void(this._pc.oniceconnectionstatechange=()=>{this._pc&&this._trace("ONICECONNECTIONSTATECHANGE ICECONNECTIONSTATE",this._pc.iceConnectionState)})}async _setRemoteDescription(a){this._pc&&(await this._pc.setRemoteDescription(new RTCSessionDescription({type:"offer",sdp:a.sdp})))}async _createAnswer(a){if(this._pc){if(this.options.simulcast&&("upstream"===this.role||"sendrecv"===this.role||"sendonly"===this.role)&&a.encodings){const b=this._pc.getTransceivers().find(a=>{if(a.mid&&0<=a.mid.indexOf("video")&&null==a.currentDirection)return a});if(!b)throw new Error("Simulcast Error");await this._setSenderParameters(b,a.encodings)}const b=await this._pc.createAnswer();await this._pc.setLocalDescription(b)}}_setSenderParameters(a,b){const c=a.sender.getParameters();return c.encodings=b,a.sender.setParameters(c)}_sendAnswer(){this._pc&&this._ws&&this._pc.localDescription&&(this._trace("ANSWER SDP",this._pc.localDescription.sdp),this._ws.send(JSON.stringify({type:"answer",sdp:this._pc.localDescription.sdp})))}_sendUpdateAnswer(){this._pc&&this._ws&&this._pc.localDescription&&(this._trace("ANSWER SDP",this._pc.localDescription.sdp),this._ws.send(JSON.stringify({type:"update",sdp:this._pc.localDescription.sdp})))}_onIceCandidate(){return new Promise((a,b)=>{const c=setInterval(()=>{if(null===this._pc){clearInterval(c);const a=new Error;a.message="ICECANDIDATE TIMEOUT",b(a)}else this._pc&&"connected"===this._pc.iceConnectionState&&(clearInterval(c),a())},100);this._pc&&(this._pc.onicecandidate=b=>{if(this._pc&&this._trace("ONICECANDIDATE ICEGATHERINGSTATE",this._pc.iceGatheringState),null===b.candidate)clearInterval(c),a();else{const a=b.candidate.toJSON(),c=Object.assign(a,{type:"candidate"});this._trace("ONICECANDIDATE CANDIDATE MESSAGE",c),this._ws&&this._ws.send(JSON.stringify(c))}})})}async _update(a){await this._setRemoteDescription(a),await this._createAnswer(a),this._sendUpdateAnswer()}async _getStats(){const a=[];if(!this._pc)return a;const b=await this._pc.getStats();return b.forEach(b=>{a.push(b)}),a}_trace(a,b){this._callbacks.log(a,b);this.debug&&f(this.clientId,a,b)}}class h extends g{connect(a){return this.options.multistream?this._multiStream(a):this._singleStream(a)}async _singleStream(a){let b=0;this.options.timeout&&0<this.options.timeout&&(b=setTimeout(()=>{const a=new Error;a.message="CONNECTION TIMEOUT",this._callbacks.timeout(),this.disconnect(),Promise.reject(a)},this.options.timeout)),await this.disconnect();const c=await this._createOffer(),d=await this._signaling(c);return await this._connectPeerConnection(d),await this._setRemoteDescription(d),a.getTracks().forEach(b=>{this._pc&&this._pc.addTrack(b,a)}),this.stream=a,await this._createAnswer(d),this._sendAnswer(),await this._onIceCandidate(),clearTimeout(b),a}async _multiStream(a){let b=0;this.options.timeout&&0<this.options.timeout&&(b=setTimeout(()=>{const a=new Error;a.message="CONNECTION TIMEOUT",this._callbacks.timeout(),this.disconnect(),Promise.reject(a)},this.options.timeout)),await this.disconnect();const c=await this._createOffer(),d=await this._signaling(c);return await this._connectPeerConnection(d),this._pc&&("undefined"==typeof this._pc.ontrack?this._pc.onaddstream=b=>{this.connectionId!==b.stream.id&&(this.remoteConnectionIds.push(a.id),this._callbacks.addstream(b))}:this._pc.ontrack=a=>{const b=a.streams[0];!b||"default"===b.id||b.id===this.connectionId||-1<this.remoteConnectionIds.indexOf(b.id)||(a.stream=b,this.remoteConnectionIds.push(b.id),this._callbacks.addstream(a))}),this._pc&&(this._pc.onremovestream=a=>{const b=this.remoteConnectionIds.indexOf(a.stream.id);-1<b&&delete this.remoteConnectionIds[b],this._callbacks.removestream(a)}),await this._setRemoteDescription(d),a.getTracks().forEach(b=>{this._pc&&this._pc.addTrack(b,a)}),await this._createAnswer(d),this._sendAnswer(),await this._onIceCandidate(),clearTimeout(b),a}}class i extends g{connect(){return this.options.multistream?this._multiStream():this._singleStream()}async _singleStream(){let a=0;this.options.timeout&&0<this.options.timeout&&(a=setTimeout(()=>{const a=new Error;a.message="CONNECTION TIMEOUT",this._callbacks.timeout(),this.disconnect(),Promise.reject(a)},this.options.timeout)),await this.disconnect();const b=await this._createOffer(),c=await this._signaling(b);return await this._connectPeerConnection(c),this._pc&&(this._pc.ontrack=a=>{this.stream=a.streams[0];const b=this.stream.id;"default"===b||-1<this.remoteConnectionIds.indexOf(b)||(a.stream=this.stream,this.remoteConnectionIds.push(b),this._callbacks.addstream(a))}),await this._setRemoteDescription(c),await this._createAnswer(c),this._sendAnswer(),await this._onIceCandidate(),clearTimeout(a),this.stream||new MediaStream}async _multiStream(){let a=0;this.options.timeout&&0<this.options.timeout&&(a=setTimeout(()=>{const a=new Error;a.message="CONNECTION TIMEOUT",this._callbacks.timeout(),this.disconnect(),Promise.reject(a)},this.options.timeout)),await this.disconnect();const b=await this._createOffer(),c=await this._signaling(b);return await this._connectPeerConnection(c),this._pc&&(this._pc.ontrack=a=>{const b=a.streams[0];"default"===b.id||b.id===this.connectionId||-1<this.remoteConnectionIds.indexOf(b.id)||(a.stream=b,this.remoteConnectionIds.push(b.id),this._callbacks.addstream(a))},this._pc.onremovestream=a=>{const b=this.remoteConnectionIds.indexOf(a.stream.id);-1<b&&delete this.remoteConnectionIds[b],this._callbacks.removestream(a)}),await this._setRemoteDescription(c),await this._createAnswer(c),this._sendAnswer(),await this._onIceCandidate(),void clearTimeout(a)}}class j{constructor(a,b=!1){this.signalingUrl=a,this.debug=b}publisher(a,b=null,c={audio:!0,video:!0}){return new h(this.signalingUrl,"upstream",a,b,c,this.debug)}subscriber(a,b=null,c={audio:!0,video:!0}){return new i(this.signalingUrl,"downstream",a,b,c,this.debug)}sendrecv(a,b=null,c={audio:!0,video:!0}){return new h(this.signalingUrl,"sendrecv",a,b,c,this.debug)}sendonly(a,b=null,c={audio:!0,video:!0}){return new h(this.signalingUrl,"sendonly",a,b,c,this.debug)}recvonly(a,b=null,c={audio:!0,video:!0}){return new i(this.signalingUrl,"recvonly",a,b,c,this.debug)}}return{connection:function(a,b=!1){return new j(a,b)},version:function(){return"1.16.0-dev"}}});
//# sourceMappingURL=sora.min.js.map
